name: Continuous Deployment 
on:
  push:
    branches:
      - dev
      - main
      - staging
  pull_request:
    branches:
      - dev
      - main
      - staging
#env:
#  docker_username: ${{ secrets.DOCKER_USERNAME }}
#  docker_password: ${{ secrets.DOCKER_PASSWORD }}
#  GIT_COMMIT: ${{ github.sha }}
jobs:
  Clone-down:
    runs-on: ubuntu-latest
    steps:
      - name: Clone-down
        uses: actions/checkout@v2   
      - name: Upload Code
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
           
              
  Build-backend:
    runs-on: ubuntu-latest
    needs: Clone-down
    steps:
      - name: Download Code
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Setup Go
        uses: actions/setup-go@v3
      - name: Verify Go
        run: go mod verify
        working-directory: ./backend  
      - name: Build
        run: go build
        working-directory: ./backend
      - name: Upload Backend Binary
        uses: actions/upload-artifact@v2
        with:
          name: backend-bin
          path: ./backend/backend

  Build-frontend:
    runs-on: ubuntu-latest
    needs: Clone-down
    steps:
      - name: Download Code
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Setup Go
        uses: actions/setup-go@v3
      - name: Verify Go
        working-directory: ./frontend
        run: go mod verify          
      - name: Build
        working-directory: ./frontend
        run: go build
      - name: Upload Frontend Binary
        uses: actions/upload-artifact@v2
        with:
          name: frontend-bin
          path: ./frontend

  Test-frontend:
    runs-on: ubuntu-latest
    needs: Clone-down
    steps:
      - name: Download Repo
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Setup Go
        uses: actions/setup-go@v3
      - name: Verify Go
        working-directory: ./frontend
        run: go mod verify          
      - name: Test
        working-directory: ./frontend
        run: go test

#########################
####### DOCKERHUB #######
#########################        

  Docker-image-dev:
    runs-on: ubuntu-latest
    needs: [Build-backend, Build-frontend, Test-frontend]
    if: ${{ github.ref == 'refs/heads/dev' }}
    steps:
      - name: Download Repo
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:dev
      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:dev  

  Docker-image-staging:
    runs-on: ubuntu-latest
    needs: [Build-backend, Build-frontend, Test-frontend]
    if: ${{ github.ref == 'refs/heads/staging' }}
    steps:
      - name: Download Repo
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:staging
      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:staging  

  Docker-image-main:
    runs-on: ubuntu-latest
    needs: [Build-backend, Build-frontend, Test-frontend]
    if: ${{ github.ref == 'refs/heads/main' }}  
    steps:
      - name: Download Repo
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:main
      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:main  

  

##########################
####### DEPLOYMENT #######
##########################

  Deploy-latest:
    runs-on: ubuntu-latest
    needs: [Docker-image-dev]
    if: github.ref == 'refs/heads/dev'    
    steps:
      - name: Nothing yet
        run: echo "Hello latest" 
  Deploy-staging:
    runs-on: ubuntu-latest
    needs: [Docker-image-staging]
    if: github.ref == 'refs/heads/staging'    
    steps:
      - name: Nothing yet
        run: echo "Hello latest" 
  Deploy-main:
    runs-on: ubuntu-latest
    needs: [Docker-image-main]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Nothing yet
        run: echo "Hello latest"         
